// Frontend/src/main.jsx

import { StrictMode, Suspense } from "react"; // ðŸ’¡ Suspense is imported
import { createRoot } from "react-dom/client";

// ðŸ›  Polyfill matchMedia (keeping your original fix)
if (typeof window !== "undefined" && !window.matchMedia) {
Â  window.matchMedia = () => ({
Â  Â  matches: false,
Â  Â  addListener: () => {},
Â  Â  removeListener: () => {},
Â  Â  addEventListener: () => {},
Â  Â  removeEventListener: () => {},
Â  Â  dispatchEvent: () => false,
Â  });
}

import "./index.css";
import "./i18n"; // initialize i18n configuration
import App from "./App.jsx";

// ðŸš€ Wrap App with Suspense to wait for translations to load from the network
createRoot(document.getElementById("root")).render(
Â  <StrictMode>
Â  Â  {/* The fallback prop displays a loading message while files are fetched */}
Â  Â  <Suspense fallback={<div>Loading...</div>}> 
Â  Â  Â  <App />
Â  Â  </Suspense>
Â  </StrictMode>
);